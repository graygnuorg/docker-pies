#!/bin/sh

export USER IMAGE PLATFORM BUILD PIES_TAG XENV_TAG NOCACHE OSVERSION

USER=graygnuorg
IMAGE=pies
BUILD=latest
OSVERSION=latest
PLATFORM=

while [ $# -gt 0 ]
do
    case $1 in
	--no-cache)
	    NOCACHE=1
	    shift;;
	--debug|-x)
	    set -x
	    shift;;

	--build=*)
	    BUILD=${1##--build=}
	    shift;;
	--build|-b)
	    shift
	    BUILD=${1:?--build requires argument}
	    shift;;
	-b*)
	    BUILD=${1##-b}
	    shift;;
		
	-*) echo >&2 "$0: unknown option: $1"
	    exit 1;;
        --) shift
	    break;;
	*)  break;;
    esac
done

case $# in
    1) PLATFORM=$1
       shift;;
    0) echo >&2 "$0: required argument missing"
       exit 1;;
    *) echo >&2 "$0: too many arguments"
       exit 1;;
esac    
	
if [ ! -d $PLATFORM ]; then
    echo >&2 "$0: unknown platform $PLATFORM"
    exit 1
fi

if [ -x $PLATFORM/build.sh ]; then
    BUILDER=$PLATFORM/build.sh
elif [ -f $PLATFORM/Dockerfile ]; then
    BUILDER=./build.sh
else    
    echo >&2 "$0: don't know how to build $IMAGE for $PLATFORM"
    exit 1
fi

IMAGENAME=${USER}/${IMAGE}:${PLATFORM}-${BUILD}
export IMAGENAME

awk '
/^[[:blank:]]*#/ { next }
/^[[:blank:]]*$/ { next }
state == 0 && /^build='$BUILD'$/ { state=1 }
state == 0 { next }
state == 1 && /=/ { sub(/[[:blank:]]*=[[:blank:]]*/, "="); }
state == 1 && /^os[[:blank:]]+'$PLATFORM'=/ { sub(/^os[[:blank:]].*=/, "OSVERSION="); print; next }
state == 1 && /^[A-Za-z_][A-Za-z_0-9]*=/ { print }
state == 1 && /\f/ { exit }
' buildtab > conf.$$
. ./conf.$$
rm conf.$$

exec $BUILDER

